apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: psp.kathara.unprivileged
spec:
  privileged: true
  volumes:
  - hostPath
  allowedHostPaths:
  - pathPrefix: "/opt/cni/bin"
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  defaultAllowPrivilegeEscalation: false
  allowedCapabilities: ['NET_ADMIN', 'NET_RAW', 'SYS_ADMIN']
  defaultAddCapabilities: []
  requiredDropCapabilities: []
  hostPID: false
  hostIPC: false
  hostNetwork: true
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  seLinux:
    rule: 'RunAsAny'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kathara
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames: ['psp.kathara.unprivileged']
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kathara
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kathara
subjects:
- kind: ServiceAccount
  name: kathara
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kathara
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-kathara-worker-ds
  namespace: kube-system
  labels:
    k8s-app: kube-kathara-worker
spec:
  selector:
    matchLabels:
      name: kube-kathara-worker-ds
  template:
    metadata:
      labels:
        name: kube-kathara-worker-ds
    spec:
      hostNetwork: true
      containers:
        - name: kube-kathara-worker
          image: kathara/megalos-bgp-manager:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: cnibin
              mountPath: /host/opt/cni/bin
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
          env:
            - name: IS_MASTER
              value: "false"
      volumes:
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
      serviceAccountName: kathara
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-kathara-master
  namespace: kube-system
  labels:
    name: kube-kathara-master
spec:
  selector:
    matchLabels:
      name: kube-kathara-master
  template:
    metadata:
      labels:
        name: kube-kathara-master
    spec:
      containers:
        - name: kube-kathara-master
          image: kathara/megalos-bgp-manager:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
          env:
            - name: IS_MASTER
              value: "true"
      serviceAccountName: kathara
---
apiVersion: v1
kind: Service
metadata:
  name: kathara-master
  namespace: kube-system
  labels:
    name: kathara-master
spec:
  type: NodePort
  selector:
    name: kube-kathara-master
  ports:
    - protocol: TCP
      port: 179
      targetPort: 179
